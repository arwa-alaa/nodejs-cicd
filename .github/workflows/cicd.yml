name: CICD
on:
  push:
    branches:
      - main
  workflow_dispatch:
    
jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node
        id: setup-node
        uses: actions/setup-node@v4.0.1
        with:
          node-version: 16.x
          cache: 'npm'

      - name: Deps
        run: |
          npm install

      - name: build
        run: npm run build

      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/


  infra:
    name: Provision EC2 instance using Terraform
    
    runs-on: ubuntu-latest
    
    needs: [ build ]
    
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
    
    outputs:
      eip: ${{ steps.ip_address.outputs.ec2_eip }}  
    
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Download a single artifact
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: ./dist

      - name: Set up Terraform 
        uses: hashicorp/setup-terraform@v1

      - name: Terraform init
        run: terraform -chdir=terraform init

      - name: Terraform apply
        run: terraform -chdir=terraform apply --auto-approve

      - name: Get ec2 instance ip
        id: ip_address
        run: |
          terraform-bin -chdir=terraform output -raw eip_value > ip_address.txt
          echo "ec2_eip=$(cat ip_address.txt)" >> $GITHUB_OUTPUT

      - name: Copy file via ssh key
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ steps.ip_address.outputs.ec2_eip }}
          username: ec2-user
          port: 22
          key: ${{ secrets.KEY }}
          source: ./dist
          target: /home/ec2-user/app          